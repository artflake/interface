/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import { Contract, utils } from "ethers";
const _abi = [{
  inputs: [{
    internalType: "address",
    name: "token",
    type: "address"
  }],
  name: "approveMax",
  outputs: [],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "token",
    type: "address"
  }],
  name: "approveMaxMinusOne",
  outputs: [],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "token",
    type: "address"
  }],
  name: "approveZeroThenMax",
  outputs: [],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "token",
    type: "address"
  }],
  name: "approveZeroThenMaxMinusOne",
  outputs: [],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes",
    name: "data",
    type: "bytes"
  }],
  name: "callPositionManager",
  outputs: [{
    internalType: "bytes",
    name: "result",
    type: "bytes"
  }],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "token",
    type: "address"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "getApprovalType",
  outputs: [{
    internalType: "enum IApproveAndCall.ApprovalType",
    name: "",
    type: "uint8"
  }],
  stateMutability: "nonpayable",
  type: "function"
}];
export class IApproveAndCall__factory {
  static createInterface() {
    return new utils.Interface(_abi);
  }

  static connect(address, signerOrProvider) {
    return new Contract(address, _abi, signerOrProvider);
  }

}
IApproveAndCall__factory.abi = _abi;